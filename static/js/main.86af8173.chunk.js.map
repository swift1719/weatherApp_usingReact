{"version":3,"sources":["component/weather.jsx","component/form.jsx","App.js","serviceWorker.js","index.js","assets/cov1.jpg"],"names":["Weather","update","this","props","covidUpdateByCountry","className","city","weathericon","temp_celsius","min","max","minmaxTemp","temp_min","temp_max","description","charAt","toUpperCase","slice","country","style","width","src","Img","alt","Country","Active","Confirmed","Recovered","Deaths","covid","NewConfirmed","TotalConfirmed","TotalRecovered","TotalDeaths","React","Component","error","role","Form","onSubmit","loadWeather","type","name","placeholder","autoComplete","App","getWeather","event","a","preventDefault","e","target","elements","value","fetch","apiCall","json","response","setState","sys","celsius","calCelsius","main","temp","calcCelsius","weather","getWeatherIcon","weatherIcon","id","getCovid","state","undefined","icon","Thuderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Math","floor","toFixed","icons","rangeId","axios","get","then","data","Global","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.86af8173.chunk.js","sourcesContent":["import React from 'react';\r\nimport Img from '../assets/cov1.jpg';\r\nclass Weather extends React.Component {\r\n\trender() {\r\n\t\tconst update = this.props.covidUpdateByCountry;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-9\">\r\n\t\t\t\t\t\t<div className=\"Card\">\r\n\t\t\t\t\t\t\t<h1 className=\"py-3\">{this.props.city}</h1>\r\n\t\t\t\t\t\t\t<h5 className=\"py-4\">\r\n\t\t\t\t\t\t\t\t<i className={`wi ${this.props.weathericon} display-1`} />\r\n\t\t\t\t\t\t\t</h5>\r\n\r\n\t\t\t\t\t\t\t{this.props.temp_celsius ? (\r\n\t\t\t\t\t\t\t\t<h1 className=\"py-2\">{this.props.temp_celsius}&#8451;</h1>\r\n\t\t\t\t\t\t\t) : null}\r\n\r\n\t\t\t\t\t\t\t{minmaxTemp(this.props.temp_min, this.props.temp_max)}\r\n\r\n\t\t\t\t\t\t\t<h4 className=\"py-4\">\r\n\t\t\t\t\t\t\t\t{this.props.description.charAt(0).toUpperCase() + this.props.description.slice(1)}\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"col-md-3 mt-4 \">\r\n\t\t\t\t\t\t{this.props.country ? (\r\n\t\t\t\t\t\t\t<div className=\"card\" style={{ width: '18rem' }}>\r\n\t\t\t\t\t\t\t\t<img src={Img} className=\"card-img-top \" alt=\"...\" />\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<h5 className=\"card-title\">\r\n\t\t\t\t\t\t\t\t\t\t<strong>{update.Country} Stats</strong>\r\n\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className=\"alert alert-danger\">Active cases: {update.Active}</h5>\r\n\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\tTotal Confirmed: {update.Confirmed}\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\tTotal Recovered: {update.Recovered}\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\tTotal Deaths: {update.Deaths}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"card\" style={{ width: '18rem' }}>\r\n\t\t\t\t\t\t\t\t<img src={Img} className=\"card-img-top \" alt=\"...\" />\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<h5 className=\"card-title\">\r\n\t\t\t\t\t\t\t\t\t\t<strong>World Stats</strong>\r\n\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className=\"alert alert-danger\">\r\n\t\t\t\t\t\t\t\t\t\tLast 24 hours : {this.props.covid.NewConfirmed}\r\n\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\tTotal Confirmed: {this.props.covid.TotalConfirmed}\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\tTotal Recovered: {this.props.covid.TotalRecovered}\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\tTotal Deaths: {this.props.covid.TotalDeaths}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nfunction minmaxTemp(min, max) {\r\n\tif (min && max) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h5>\r\n\t\t\t\t\t<span className=\"px-4\">MIN</span>\r\n\t\t\t\t\t<span className=\"px-4\">MAX</span>\r\n\t\t\t\t</h5>\r\n\t\t\t\t<h3>\r\n\t\t\t\t\t<span className=\"px-4\">{min}&#8451;</span>\r\n\t\t\t\t\t<span className=\"px-4\">{max}&#8451;</span>\r\n\t\t\t\t</h3>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Weather;\r\n","import React from 'react';\r\nimport '../styles/form.css';\r\nconst Form = (props) => {\r\n\treturn (\r\n\t\t<div className=\"container h-100\">\r\n\t\t\t<form onSubmit={props.loadWeather}>\r\n\t\t\t\t<div>{props.error ? error() : ''}</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-3 offset-md-2 py-2 \">\r\n\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" name=\"city\" placeholder=\"City\" autoComplete=\"off\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-3 py-2\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\tplaceholder=\"Country\"\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-3 mt-md-0 text-md-left py-2\">\r\n\t\t\t\t\t\t<button className=\"btn btn-warning\">Get Weather</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\nconst error = (props) => {\r\n\treturn (\r\n\t\t<div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n\t\t\tPlease Enter City and Country\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Form;\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\nimport './App.css';\nimport Weather from './component/weather';\nimport Form from './component/form';\nimport axios from 'axios';\nconst apiKey = '3dc2e5341d47c3ee10eb2daffd3999a8';\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcity: undefined,\n\t\t\tcountry: undefined,\n\t\t\ticon: undefined,\n\t\t\tcelsius: undefined,\n\t\t\ttemp_max: undefined,\n\t\t\ttemp_min: undefined,\n\t\t\tdescription: '',\n\t\t\terror: false,\n\t\t\tcovid: {},\n\t\t\tcovidUpdateByCountry: {}\n\t\t};\n\n\t\tthis.weatherIcon = {\n\t\t\tThuderstorm: 'wi-thunderstorm',\n\t\t\tDrizzle: 'wi-sleet',\n\t\t\tRain: 'wi-storm-showers',\n\t\t\tSnow: 'wi-snow',\n\t\t\tAtmosphere: 'wi-fog',\n\t\t\tClear: 'wi-day-sunny',\n\t\t\tClouds: 'wi-day-fog'\n\t\t};\n\t}\n\tcalCelsius(temp) {\n\t\tlet celsius = Math.floor(temp - 273.15);\n\t\treturn celsius;\n\t}\n\tcalcCelsius(temp) {\n\t\tlet celsius = temp - 273.15;\n\t\treturn celsius.toFixed(1);\n\t}\n\tgetWeatherIcon(icons, rangeId) {\n\t\tswitch (true) {\n\t\t\tcase rangeId >= 200 && rangeId <= 232:\n\t\t\t\tthis.setState({ icon: icons.Thuderstorm });\n\t\t\t\tbreak;\n\t\t\tcase rangeId >= 300 && rangeId <= 321:\n\t\t\t\tthis.setState({ icon: icons.Drizzle });\n\t\t\t\tbreak;\n\t\t\tcase rangeId >= 500 && rangeId <= 531:\n\t\t\t\tthis.setState({ icon: icons.Rain });\n\t\t\t\tbreak;\n\t\t\tcase rangeId >= 600 && rangeId <= 622:\n\t\t\t\tthis.setState({ icon: icons.Snow });\n\t\t\t\tbreak;\n\t\t\tcase rangeId >= 701 && rangeId <= 781:\n\t\t\t\tthis.setState({ icon: icons.Atmosphere });\n\t\t\t\tbreak;\n\t\t\tcase rangeId === 800:\n\t\t\t\tthis.setState({ icon: icons.Clear });\n\t\t\t\tbreak;\n\t\t\tcase rangeId >= 801 && rangeId <= 804:\n\t\t\t\tthis.setState({ icon: icons.Clouds });\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.setState({ icon: icons.Clouds });\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\taxios.get(`https://api.covid19api.com/summary`).then((response) => {\n\t\t\tthis.setState({\n\t\t\t\tcovid: response.data.Global\n\t\t\t});\n\t\t\t// console.log(response.data);\n\t\t});\n\t}\n\tgetCovid() {\n\t\taxios.get(`https://api.covid19api.com/dayone/country/${this.state.country}`).then((response) => {\n\t\t\tthis.setState({\n\t\t\t\tcovidUpdateByCountry: response.data[response.data.length - 1]\n\t\t\t});\n\t\t\t// console.log(response.data.length);\n\t\t});\n\t}\n\tgetWeather = async (event) => {\n\t\tevent.preventDefault();\n\t\tlet e = event.target;\n\t\tlet city = event.target.elements.city.value;\n\t\tlet country = event.target.elements.country.value;\n\n\t\tif (city && country) {\n\t\t\tconst apiCall = await fetch(\n\t\t\t\t`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${apiKey}`\n\t\t\t);\n\t\t\tconst response = await apiCall.json();\n\t\t\t// console.log(response);\n\n\t\t\tthis.setState({\n\t\t\t\tcity: `${response.name},${response.sys.country}`,\n\t\t\t\tcountry: response.sys.country,\n\t\t\t\tcelsius: this.calCelsius(response.main.temp),\n\t\t\t\ttemp_max: this.calcCelsius(response.main.temp_max),\n\t\t\t\ttemp_min: this.calcCelsius(response.main.temp_min),\n\t\t\t\tdescription: response.weather[0].description,\n\t\t\t\terror: false\n\t\t\t});\n\t\t\tthis.getWeatherIcon(this.weatherIcon, response.weather[0].id);\n\n\t\t\t// console.log(this.state);\n\t\t\t// console.log(response);\n\n\t\t\tthis.getCovid();\n\t\t} else {\n\t\t\tthis.setState({ error: true });\n\t\t}\n\t\t// console.log(e[0].value);\n\t\te[0].value = '';\n\t\te[1].value = '';\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Form loadWeather={this.getWeather} error={this.state.error} />\n\t\t\t\t<Weather\n\t\t\t\t\tcity={this.state.city}\n\t\t\t\t\tcountry={this.state.country}\n\t\t\t\t\ttemp_celsius={this.state.celsius}\n\t\t\t\t\ttemp_max={this.state.temp_max}\n\t\t\t\t\ttemp_min={this.state.temp_min}\n\t\t\t\t\tdescription={this.state.description}\n\t\t\t\t\tweathericon={this.state.icon}\n\t\t\t\t\tcovid={this.state.covid}\n\t\t\t\t\tcovidUpdateByCountry={this.state.covidUpdateByCountry}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cov1.453135b2.jpg\";"],"sourceRoot":""}